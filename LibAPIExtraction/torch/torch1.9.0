
----------------------------------------Modules----------------------------------------
M:torch.functional
M:torch.__init__
M:torch.__config__
M:torch._utils_internal
M:torch._python_dispatcher
M:torch._VF
M:torch._appdirs
M:torch._utils
M:torch.quasirandom
M:torch._six
M:torch._tensor
M:torch._vmap_internals
M:torch.version
M:torch.hub
M:torch._deploy
M:torch._jit_internal
M:torch.overrides
M:torch._tensor_str
M:torch._lobpcg
M:torch.serialization
M:torch._lowrank
M:torch.__future__
M:torch._torch_docs
M:torch._autograd_functions
M:torch._storage_docs
M:torch.storage
M:torch._namedtensor_internals
M:torch.types
M:torch.random
M:torch._tensor_docs
M:torch._classes
M:torch._linalg_utils
M:torch._ops
M:torch.backends.__init__
M:torch.backends.quantized.__init__
M:torch.backends.openmp.__init__
M:torch.backends.mkl.__init__
M:torch.backends.xnnpack.__init__
M:torch.backends.cuda.__init__
M:torch.backends.mkldnn.__init__
M:torch.backends._nnapi.serializer
M:torch.backends._nnapi.__init__
M:torch.backends._nnapi.prepare
M:torch.backends.cudnn.rnn
M:torch.backends.cudnn.__init__
M:torch.fx.__init__
M:torch.fx.subgraph_rewriter
M:torch.fx.graph_module
M:torch.fx.symbolic_trace
M:torch.fx.graph
M:torch.fx.proxy
M:torch.fx._pytree
M:torch.fx.node
M:torch.fx.interpreter
M:torch.fx.operator_schemas
M:torch.fx.immutable_collections
M:torch.fx.experimental.__init__
M:torch.fx.experimental.const_fold
M:torch.fx.experimental.normalize
M:torch.fx.experimental.schema_type_annotation
M:torch.fx.experimental.optimization
M:torch.fx.experimental.partitioner_utils
M:torch.fx.experimental.graph_manipulation
M:torch.fx.experimental.rewriter
M:torch.fx.experimental.merge_matmul
M:torch.fx.experimental.param_fetch
M:torch.fx.experimental.accelerator_partitioner
M:torch.fx.experimental.fx2trt.__init__
M:torch.fx.experimental.fx2trt.fx2trt
M:torch.fx.experimental.fx2trt.converter.__init__
M:torch.fx.experimental.fx2trt.converter.vanilla_converter
M:torch.fx.passes.__init__
M:torch.fx.passes.graph_drawer
M:torch.fx.passes.operator_support
M:torch.fx.passes.split_utils
M:torch.fx.passes.net_min_base
M:torch.fx.passes.shape_prop
M:torch.fx.passes.splitter_base
M:torch.fx.passes.split_module
M:torch.fx.passes.tools_common
M:torch.optim.__init__
M:torch.optim.optimizer
M:torch.optim.rprop
M:torch.optim.adagrad
M:torch.optim._functional
M:torch.optim.asgd
M:torch.optim.sgd
M:torch.optim.lr_scheduler
M:torch.optim.lbfgs
M:torch.optim.swa_utils
M:torch.optim.sparse_adam
M:torch.optim.adamax
M:torch.optim.adamw
M:torch.optim.rmsprop
M:torch.optim.adadelta
M:torch.optim.adam
M:torch.optim._multi_tensor.__init__
M:torch.optim._multi_tensor.rprop
M:torch.optim._multi_tensor.asgd
M:torch.optim._multi_tensor.sgd
M:torch.optim._multi_tensor.adamax
M:torch.optim._multi_tensor.adamw
M:torch.optim._multi_tensor.rmsprop
M:torch.optim._multi_tensor.adadelta
M:torch.optim._multi_tensor.adam
M:torch.ao.__init__
M:torch.ao.nn.__init__
M:torch.ao.nn.sparse.__init__
M:torch.ao.nn.sparse.quantized.__init__
M:torch.ao.nn.sparse.quantized.utils
M:torch.ao.nn.sparse.quantized.linear
M:torch.ao.nn.sparse.quantized.dynamic.__init__
M:torch.ao.nn.sparse.quantized.dynamic.linear
M:torch.sparse.__init__
M:torch.linalg.__init__
M:torch.cuda.streams
M:torch.cuda.__init__
M:torch.cuda.sparse
M:torch.cuda.nvtx
M:torch.cuda._utils
M:torch.cuda.comm
M:torch.cuda.nccl
M:torch.cuda.profiler
M:torch.cuda.memory
M:torch.cuda.random
M:torch.cuda.error
M:torch.cuda.amp.__init__
M:torch.cuda.amp.common
M:torch.cuda.amp.grad_scaler
M:torch.cuda.amp.autocast_mode
M:torch.testing.__init__
M:torch.testing._asserts
M:torch.testing._core
M:torch.testing._check_kernel_launches
M:torch.testing._internal.common_quantization
M:torch.testing._internal.dist_utils
M:torch.testing._internal.hypothesis_utils
M:torch.testing._internal.__init__
M:torch.testing._internal.autocast_test_lists
M:torch.testing._internal.common_methods_invocations
M:torch.testing._internal.common_nn
M:torch.testing._internal.jit_utils
M:torch.testing._internal.jit_metaprogramming_utils
M:torch.testing._internal.framework_utils
M:torch.testing._internal.common_cuda
M:torch.testing._internal.common_quantized
M:torch.testing._internal.te_utils
M:torch.testing._internal.common_distributed
M:torch.testing._internal.common_utils
M:torch.testing._internal.common_jit
M:torch.testing._internal.expecttest
M:torch.testing._internal.common_device_type
M:torch.testing._internal.test_module.__init__
M:torch.testing._internal.test_module.no_future_div
M:torch.testing._internal.test_module.future_div
M:torch.testing._internal.generated.__init__
M:torch.testing._internal.generated.annotated_fn_args
M:torch.testing._internal.data.__init__
M:torch.testing._internal.data.network1
M:torch.testing._internal.data.network2
M:torch.testing._internal.codegen.__init__
M:torch.testing._internal.codegen.random_topo_test
M:torch.testing._internal.distributed.distributed_test
M:torch.testing._internal.distributed.__init__
M:torch.testing._internal.distributed.pipe_with_ddp_test
M:torch.testing._internal.distributed.rpc_utils
M:torch.testing._internal.distributed.ddp_under_dist_autograd_test
M:torch.testing._internal.distributed.pipeline.__init__
M:torch.testing._internal.distributed.rpc.__init__
M:torch.testing._internal.distributed.rpc.rpc_test
M:torch.testing._internal.distributed.rpc.process_group_agent_test_fixture
M:torch.testing._internal.distributed.rpc.dist_optimizer_test
M:torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture
M:torch.testing._internal.distributed.rpc.rpc_agent_test_fixture
M:torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture
M:torch.testing._internal.distributed.rpc.dist_autograd_test
M:torch.testing._internal.distributed.rpc.examples.__init__
M:torch.testing._internal.distributed.rpc.examples.parameter_server_test
M:torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test
M:torch.testing._internal.distributed.rpc.jit.__init__
M:torch.testing._internal.distributed.rpc.jit.rpc_test
M:torch.testing._internal.distributed.rpc.jit.rpc_test_faulty
M:torch.testing._internal.distributed.rpc.jit.dist_autograd_test
M:torch.testing._internal.distributed.nn.__init__
M:torch.testing._internal.distributed.nn.api.__init__
M:torch.testing._internal.distributed.nn.api.remote_module_test
M:torch.quantization.__init__
M:torch.quantization.fuse_modules
M:torch.quantization.quantize_jit
M:torch.quantization.utils
M:torch.quantization.qconfig
M:torch.quantization.quant_type
M:torch.quantization._correct_bias
M:torch.quantization._learnable_fake_quantize
M:torch.quantization.stubs
M:torch.quantization._numeric_suite_fx
M:torch.quantization._equalize
M:torch.quantization.fuser_method_mappings
M:torch.quantization.quantize
M:torch.quantization.observer
M:torch.quantization.quantization_mappings
M:torch.quantization.quantize_fx
M:torch.quantization._numeric_suite
M:torch.quantization.fake_quantize
M:torch.quantization.fx.__init__
M:torch.quantization.fx.quantization_types
M:torch.quantization.fx.fuse
M:torch.quantization.fx.graph_module
M:torch.quantization.fx.pattern_utils
M:torch.quantization.fx.utils
M:torch.quantization.fx.qconfig_utils
M:torch.quantization.fx.quantize
M:torch.quantization.fx.quantization_patterns
M:torch.quantization.fx.fusion_patterns
M:torch.quantization.ns.__init__
M:torch.quantization.ns.pattern_utils
M:torch.quantization.ns.graph_passes
M:torch.quantization.ns.utils
M:torch.quantization.ns.graph_matcher
M:torch.quantization.ns.mappings
M:torch.quantization.ns.ns_types
M:torch.quantization.ns.weight_utils
M:torch.autograd.functional
M:torch.autograd.__init__
M:torch.autograd.variable
M:torch.autograd.anomaly_mode
M:torch.autograd.grad_mode
M:torch.autograd.profiler
M:torch.autograd.gradcheck
M:torch.autograd.forward_ad
M:torch.autograd.function
M:torch.autograd._functions.__init__
M:torch.autograd._functions.tensor
M:torch.autograd._functions.utils
M:torch.special.__init__
M:torch.distributions.beta
M:torch.distributions.multivariate_normal
M:torch.distributions.chi2
M:torch.distributions.__init__
M:torch.distributions.cauchy
M:torch.distributions.bernoulli
M:torch.distributions.categorical
M:torch.distributions.weibull
M:torch.distributions.geometric
M:torch.distributions.one_hot_categorical
M:torch.distributions.continuous_bernoulli
M:torch.distributions.normal
M:torch.distributions.lowrank_multivariate_normal
M:torch.distributions.utils
M:torch.distributions.relaxed_bernoulli
M:torch.distributions.kl
M:torch.distributions.gumbel
M:torch.distributions.transformed_distribution
M:torch.distributions.exp_family
M:torch.distributions.mixture_same_family
M:torch.distributions.logistic_normal
M:torch.distributions.constraint_registry
M:torch.distributions.poisson
M:torch.distributions.multinomial
M:torch.distributions.transforms
M:torch.distributions.laplace
M:torch.distributions.kumaraswamy
M:torch.distributions.binomial
M:torch.distributions.studentT
M:torch.distributions.distribution
M:torch.distributions.negative_binomial
M:torch.distributions.fishersnedecor
M:torch.distributions.pareto
M:torch.distributions.half_cauchy
M:torch.distributions.lkj_cholesky
M:torch.distributions.independent
M:torch.distributions.exponential
M:torch.distributions.dirichlet
M:torch.distributions.log_normal
M:torch.distributions.von_mises
M:torch.distributions.constraints
M:torch.distributions.half_normal
M:torch.distributions.gamma
M:torch.distributions.uniform
M:torch.distributions.relaxed_categorical
M:torch.fft.__init__
M:torch.futures.__init__
M:torch.jit._recursive
M:torch.jit.__init__
M:torch.jit._freeze
M:torch.jit.supported_ops
M:torch.jit._script
M:torch.jit._trace
M:torch.jit._state
M:torch.jit._pickle
M:torch.jit._check
M:torch.jit._builtins
M:torch.jit.quantized
M:torch.jit._async
M:torch.jit._logging
M:torch.jit._fuser
M:torch.jit.frontend
M:torch.jit._monkeytype_config
M:torch.jit.unsupported_tensor_ops
M:torch.jit._serialization
M:torch.jit.annotations
M:torch.jit.mobile.__init__
M:torch.nn.functional
M:torch.nn.__init__
M:torch.nn._reduction
M:torch.nn.init
M:torch.nn.cpp
M:torch.nn.grad
M:torch.nn.parameter
M:torch.nn.common_types
M:torch.nn.backends.__init__
M:torch.nn.backends.thnn
M:torch.nn.quantized.functional
M:torch.nn.quantized.__init__
M:torch.nn.quantized.dynamic.__init__
M:torch.nn.quantized.dynamic.modules.rnn
M:torch.nn.quantized.dynamic.modules.__init__
M:torch.nn.quantized.dynamic.modules.linear
M:torch.nn.quantized._reference.__init__
M:torch.nn.quantized._reference.modules.__init__
M:torch.nn.quantized._reference.modules.linear
M:torch.nn.quantized._reference.modules.conv
M:torch.nn.quantized.modules.batchnorm
M:torch.nn.quantized.modules.__init__
M:torch.nn.quantized.modules.utils
M:torch.nn.quantized.modules.functional_modules
M:torch.nn.quantized.modules.embedding_ops
M:torch.nn.quantized.modules.normalization
M:torch.nn.quantized.modules.linear
M:torch.nn.quantized.modules.conv
M:torch.nn.quantized.modules.activation
M:torch.nn.intrinsic.__init__
M:torch.nn.intrinsic.quantized.__init__
M:torch.nn.intrinsic.quantized._reference.__init__
M:torch.nn.intrinsic.quantized._reference.modules.__init__
M:torch.nn.intrinsic.quantized._reference.modules.conv_relu
M:torch.nn.intrinsic.quantized._reference.modules.linear_relu
M:torch.nn.intrinsic.quantized.modules.__init__
M:torch.nn.intrinsic.quantized.modules.bn_relu
M:torch.nn.intrinsic.quantized.modules.conv_relu
M:torch.nn.intrinsic.quantized.modules.linear_relu
M:torch.nn.intrinsic.qat.__init__
M:torch.nn.intrinsic.qat.modules.__init__
M:torch.nn.intrinsic.qat.modules.conv_fused
M:torch.nn.intrinsic.qat.modules.linear_relu
M:torch.nn.intrinsic.modules.__init__
M:torch.nn.intrinsic.modules.fused
M:torch.nn.parallel.__init__
M:torch.nn.parallel._functions
M:torch.nn.parallel.comm
M:torch.nn.parallel.parallel_apply
M:torch.nn.parallel.distributed
M:torch.nn.parallel.replicate
M:torch.nn.parallel.data_parallel
M:torch.nn.parallel.scatter_gather
M:torch.nn.qat.__init__
M:torch.nn.qat.modules.__init__
M:torch.nn.qat.modules.linear
M:torch.nn.qat.modules.conv
M:torch.nn.utils.rnn
M:torch.nn.utils.__init__
M:torch.nn.utils.fusion
M:torch.nn.utils.memory_format
M:torch.nn.utils.weight_norm
M:torch.nn.utils.parametrize
M:torch.nn.utils.spectral_norm
M:torch.nn.utils.convert_parameters
M:torch.nn.utils.parametrizations
M:torch.nn.utils.prune
M:torch.nn.utils.clip_grad
M:torch.nn.quantizable.__init__
M:torch.nn.quantizable.modules.rnn
M:torch.nn.quantizable.modules.__init__
M:torch.nn.quantizable.modules.activation
M:torch.nn.modules.batchnorm
M:torch.nn.modules.container
M:torch.nn.modules.rnn
M:torch.nn.modules.flatten
M:torch.nn.modules.__init__
M:torch.nn.modules.sparse
M:torch.nn.modules.transformer
M:torch.nn.modules.loss
M:torch.nn.modules.distance
M:torch.nn.modules.utils
M:torch.nn.modules.pooling
M:torch.nn.modules.adaptive
M:torch.nn.modules._functions
M:torch.nn.modules.dropout
M:torch.nn.modules.module
M:torch.nn.modules.instancenorm
M:torch.nn.modules.channelshuffle
M:torch.nn.modules.padding
M:torch.nn.modules.normalization
M:torch.nn.modules.linear
M:torch.nn.modules.conv
M:torch.nn.modules.lazy
M:torch.nn.modules.activation
M:torch.nn.modules.fold
M:torch.nn.modules.pixelshuffle
M:torch.nn.modules.upsampling
M:torch.package._stdlib
M:torch.package.__init__
M:torch.package._package_unpickler
M:torch.package.package_importer
M:torch.package._package_pickler
M:torch.package.importer
M:torch.package._importlib
M:torch.package.package_exporter
M:torch.package._mock_zipreader
M:torch.package._mangling
M:torch.package.find_file_dependencies
M:torch.package._digraph
M:torch.package._mock
M:torch.package.file_structure_representation
M:torch.package.glob_group
M:torch.package.analyze.is_from_package
M:torch.package.analyze.__init__
M:torch.package.analyze.trace_dependencies
M:torch.multiprocessing.__init__
M:torch.multiprocessing.queue
M:torch.multiprocessing.spawn
M:torch.multiprocessing.pool
M:torch.multiprocessing._atfork
M:torch.multiprocessing.reductions
M:torch.for_onnx.__init__
M:torch.utils.__init__
M:torch.utils.throughput_benchmark
M:torch.utils.checkpoint
M:torch.utils.file_baton
M:torch.utils.mkldnn
M:torch.utils.collect_env
M:torch.utils.mobile_optimizer
M:torch.utils.dlpack
M:torch.utils._cpp_extension_versioner
M:torch.utils.bundled_inputs
M:torch.utils._pytree
M:torch.utils.cpp_extension
M:torch.utils.model_zoo
M:torch.utils.show_pickle
M:torch.utils._crash_handler
M:torch.utils.hooks
M:torch.utils.model_dump.__main__
M:torch.utils.model_dump.__init__
M:torch.utils.hipify.hipify_python
M:torch.utils.hipify.__init__
M:torch.utils.hipify.version
M:torch.utils.hipify.cuda_to_hip_mappings
M:torch.utils.hipify.constants
M:torch.utils.ffi.__init__
M:torch.utils.backcompat.__init__
M:torch.utils.bottleneck.__main__
M:torch.utils.bottleneck.__init__
M:torch.utils.data._decorator
M:torch.utils.data.__init__
M:torch.utils.data.sampler
M:torch.utils.data.dataset
M:torch.utils.data.dataloader
M:torch.utils.data.distributed
M:torch.utils.data._typing
M:torch.utils.data._utils.fetch
M:torch.utils.data._utils.__init__
M:torch.utils.data._utils.pin_memory
M:torch.utils.data._utils.signal_handling
M:torch.utils.data._utils.worker
M:torch.utils.data._utils.collate
M:torch.utils.data.datapipes.__init__
M:torch.utils.data.datapipes.iter.loadfilesfromdisk
M:torch.utils.data.datapipes.iter.__init__
M:torch.utils.data.datapipes.iter.combinatorics
M:torch.utils.data.datapipes.iter.routeddecoder
M:torch.utils.data.datapipes.iter.combining
M:torch.utils.data.datapipes.iter.selecting
M:torch.utils.data.datapipes.iter.listdirfiles
M:torch.utils.data.datapipes.iter.grouping
M:torch.utils.data.datapipes.iter.readfilesfromzip
M:torch.utils.data.datapipes.iter.callable
M:torch.utils.data.datapipes.iter.readfilesfromtar
M:torch.utils.data.datapipes.utils.__init__
M:torch.utils.data.datapipes.utils.decoder
M:torch.utils.data.datapipes.utils.common
M:torch.utils.benchmark.__init__
M:torch.utils.benchmark.examples.blas_compare_setup
M:torch.utils.benchmark.examples.blas_compare
M:torch.utils.benchmark.examples.simple_timeit
M:torch.utils.benchmark.examples.__init__
M:torch.utils.benchmark.examples.fuzzer
M:torch.utils.benchmark.examples.spectral_ops_fuzz_test
M:torch.utils.benchmark.examples.compare
M:torch.utils.benchmark.examples.op_benchmark
M:torch.utils.benchmark.examples.end_to_end
M:torch.utils.benchmark.op_fuzzers.__init__
M:torch.utils.benchmark.op_fuzzers.unary
M:torch.utils.benchmark.op_fuzzers.spectral
M:torch.utils.benchmark.op_fuzzers.sparse_unary
M:torch.utils.benchmark.op_fuzzers.sparse_binary
M:torch.utils.benchmark.op_fuzzers.binary
M:torch.utils.benchmark.utils.__init__
M:torch.utils.benchmark.utils.fuzzer
M:torch.utils.benchmark.utils._stubs
M:torch.utils.benchmark.utils.cpp_jit
M:torch.utils.benchmark.utils.sparse_fuzzer
M:torch.utils.benchmark.utils.compare
M:torch.utils.benchmark.utils.common
M:torch.utils.benchmark.utils.timer
M:torch.utils.benchmark.utils.valgrind_wrapper.__init__
M:torch.utils.benchmark.utils.valgrind_wrapper.timer_interface
M:torch.utils.tensorboard.summary
M:torch.utils.tensorboard.__init__
M:torch.utils.tensorboard._caffe2_graph
M:torch.utils.tensorboard._pytorch_graph
M:torch.utils.tensorboard._utils
M:torch.utils.tensorboard._onnx_graph
M:torch.utils.tensorboard._embedding
M:torch.utils.tensorboard._proto_graph
M:torch.utils.tensorboard._convert_np
M:torch.utils.tensorboard.writer
M:torch.contrib.__init__
M:torch.contrib._tensorboard_vis
M:torch.onnx.__init__
M:torch.onnx.operators
M:torch.onnx.symbolic_opset7
M:torch.onnx.symbolic_opset10
M:torch.onnx.symbolic_opset12
M:torch.onnx.symbolic_opset11
M:torch.onnx.utils
M:torch.onnx.symbolic_opset9
M:torch.onnx.symbolic_caffe2
M:torch.onnx.symbolic_opset13
M:torch.onnx.symbolic_helper
M:torch.onnx.symbolic_registry
M:torch.onnx.symbolic_opset8
M:torch.profiler.__init__
M:torch.profiler.profiler
M:torch.distributed.distributed_c10d
M:torch.distributed.__init__
M:torch.distributed.rendezvous
M:torch.distributed.constants
M:torch.distributed.run
M:torch.distributed.argparse_util
M:torch.distributed.launch
M:torch.distributed.launcher.__init__
M:torch.distributed.launcher.api
M:torch.distributed.algorithms.__init__
M:torch.distributed.algorithms.ddp_comm_hooks.__init__
M:torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks
M:torch.distributed.algorithms.ddp_comm_hooks.default_hooks
M:torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook
M:torch.distributed.pipeline.__init__
M:torch.distributed.pipeline.sync.batchnorm
M:torch.distributed.pipeline.sync.__init__
M:torch.distributed.pipeline.sync.checkpoint
M:torch.distributed.pipeline.sync.stream
M:torch.distributed.pipeline.sync.utils
M:torch.distributed.pipeline.sync.worker
M:torch.distributed.pipeline.sync.dependency
M:torch.distributed.pipeline.sync.pipeline
M:torch.distributed.pipeline.sync.microbatch
M:torch.distributed.pipeline.sync.phony
M:torch.distributed.pipeline.sync.copy
M:torch.distributed.pipeline.sync.pipe
M:torch.distributed.pipeline.sync.skip.skippable
M:torch.distributed.pipeline.sync.skip.__init__
M:torch.distributed.pipeline.sync.skip.portal
M:torch.distributed.pipeline.sync.skip.layout
M:torch.distributed.pipeline.sync.skip.tracker
M:torch.distributed.pipeline.sync.skip.namespace
M:torch.distributed.pipeline.sync._balance.__init__
M:torch.distributed.pipeline.sync._balance.blockpartition
M:torch.distributed.pipeline.sync._balance.profile
M:torch.distributed.optim.functional_adamax
M:torch.distributed.optim.__init__
M:torch.distributed.optim.optimizer
M:torch.distributed.optim.functional_adagrad
M:torch.distributed.optim.functional_adam
M:torch.distributed.optim.functional_adamw
M:torch.distributed.optim.functional_sgd
M:torch.distributed.optim.functional_rmsprop
M:torch.distributed.optim.functional_rprop
M:torch.distributed.optim.zero_redundancy_optimizer
M:torch.distributed.optim.functional_adadelta
M:torch.distributed.autograd.__init__
M:torch.distributed.rpc.__init__
M:torch.distributed.rpc.internal
M:torch.distributed.rpc.utils
M:torch.distributed.rpc.api
M:torch.distributed.rpc.functions
M:torch.distributed.rpc.options
M:torch.distributed.rpc.backend_registry
M:torch.distributed.rpc.rref_proxy
M:torch.distributed.rpc.server_process_global_profiler
M:torch.distributed.rpc.constants
M:torch.distributed.rpc._testing.__init__
M:torch.distributed.rpc._testing.faulty_agent_backend_registry
M:torch.distributed.nn.functional
M:torch.distributed.nn.__init__
M:torch.distributed.nn.api.__init__
M:torch.distributed.nn.api.remote_module
M:torch.distributed.nn.jit.instantiator
M:torch.distributed.nn.jit.__init__
M:torch.distributed.nn.jit.templates.__init__
M:torch.distributed.nn.jit.templates.remote_module_template
M:torch.distributed.elastic.__init__
M:torch.distributed.elastic.agent.__init__
M:torch.distributed.elastic.agent.server.__init__
M:torch.distributed.elastic.agent.server.api
M:torch.distributed.elastic.agent.server.local_elastic_agent
M:torch.distributed.elastic.metrics.__init__
M:torch.distributed.elastic.metrics.api
M:torch.distributed.elastic.rendezvous.__init__
M:torch.distributed.elastic.rendezvous.registry
M:torch.distributed.elastic.rendezvous.etcd_server
M:torch.distributed.elastic.rendezvous.utils
M:torch.distributed.elastic.rendezvous.etcd_rendezvous_backend
M:torch.distributed.elastic.rendezvous.api
M:torch.distributed.elastic.rendezvous.static_tcp_rendezvous
M:torch.distributed.elastic.rendezvous.c10d_rendezvous_backend
M:torch.distributed.elastic.rendezvous.dynamic_rendezvous
M:torch.distributed.elastic.rendezvous.etcd_rendezvous
M:torch.distributed.elastic.rendezvous.etcd_store
M:torch.distributed.elastic.timer.__init__
M:torch.distributed.elastic.timer.api
M:torch.distributed.elastic.timer.local_timer
M:torch.distributed.elastic.events.__init__
M:torch.distributed.elastic.events.handlers
M:torch.distributed.elastic.events.api
M:torch.distributed.elastic.multiprocessing.__init__
M:torch.distributed.elastic.multiprocessing.tail_log
M:torch.distributed.elastic.multiprocessing.redirects
M:torch.distributed.elastic.multiprocessing.api
M:torch.distributed.elastic.multiprocessing.errors.__init__
M:torch.distributed.elastic.multiprocessing.errors.handlers
M:torch.distributed.elastic.multiprocessing.errors.error_handler
M:torch.distributed.elastic.utils.__init__
M:torch.distributed.elastic.utils.api
M:torch.distributed.elastic.utils.logging
M:torch.distributed.elastic.utils.store
M:torch.distributed.elastic.utils.distributed
M:torch.distributed.elastic.utils.data.__init__
M:torch.distributed.elastic.utils.data.elastic_distributed_sampler
M:torch.distributed.elastic.utils.data.cycling_iterator
P:torch
P:torch._C
P:torch.backends
P:torch.backends.quantized
P:torch.backends.openmp
P:torch.backends.mkl
P:torch.backends.xnnpack
P:torch.backends.cuda
P:torch.backends.mkldnn
P:torch.backends._nnapi
P:torch.backends.cudnn
P:torch.fx
P:torch.fx.experimental
P:torch.fx.experimental.fx2trt
P:torch.fx.experimental.fx2trt.converter
P:torch.fx.passes
P:torch.optim
P:torch.optim._multi_tensor
P:torch.lib
P:torch.bin
P:torch.ao
P:torch.ao.nn
P:torch.ao.nn.sparse
P:torch.ao.nn.sparse.quantized
P:torch.ao.nn.sparse.quantized.dynamic
P:torch.sparse
P:torch.linalg
P:torch.cuda
P:torch.cuda.amp
P:torch.testing
P:torch.testing._internal
P:torch.testing._internal.test_module
P:torch.testing._internal.generated
P:torch.testing._internal.data
P:torch.testing._internal.codegen
P:torch.testing._internal.distributed
P:torch.testing._internal.distributed.pipeline
P:torch.testing._internal.distributed.rpc
P:torch.testing._internal.distributed.rpc.examples
P:torch.testing._internal.distributed.rpc.jit
P:torch.testing._internal.distributed.nn
P:torch.testing._internal.distributed.nn.api
P:torch.quantization
P:torch.quantization.fx
P:torch.quantization.ns
P:torch.autograd
P:torch.autograd._functions
P:torch.special
P:torch.distributions
P:torch.fft
P:torch.futures
P:torch.jit
P:torch.jit.mobile
P:torch.share
P:torch.share.cmake
P:torch.share.cmake.Tensorpipe
P:torch.share.cmake.Torch
P:torch.share.cmake.Gloo
P:torch.share.cmake.Caffe2
P:torch.share.cmake.Caffe2.Modules_CUDA_fix
P:torch.share.cmake.Caffe2.Modules_CUDA_fix.upstream
P:torch.share.cmake.Caffe2.Modules_CUDA_fix.upstream.FindCUDA
P:torch.share.cmake.Caffe2.public
P:torch.share.cmake.ATen
P:torch.nn
P:torch.nn.backends
P:torch.nn.quantized
P:torch.nn.quantized.dynamic
P:torch.nn.quantized.dynamic.modules
P:torch.nn.quantized._reference
P:torch.nn.quantized._reference.modules
P:torch.nn.quantized.modules
P:torch.nn.intrinsic
P:torch.nn.intrinsic.quantized
P:torch.nn.intrinsic.quantized._reference
P:torch.nn.intrinsic.quantized._reference.modules
P:torch.nn.intrinsic.quantized.modules
P:torch.nn.intrinsic.qat
P:torch.nn.intrinsic.qat.modules
P:torch.nn.intrinsic.modules
P:torch.nn.parallel
P:torch.nn.qat
P:torch.nn.qat.modules
P:torch.nn.utils
P:torch.nn.quantizable
P:torch.nn.quantizable.modules
P:torch.nn.modules
P:torch.include
P:torch.include.caffe2
P:torch.include.caffe2.db
P:torch.include.caffe2.core
P:torch.include.caffe2.image
P:torch.include.caffe2.python
P:torch.include.caffe2.predictor
P:torch.include.caffe2.cuda_rtc
P:torch.include.caffe2.mpi
P:torch.include.caffe2.observers
P:torch.include.caffe2.serialize
P:torch.include.caffe2.sgd
P:torch.include.caffe2.opt
P:torch.include.caffe2.queue
P:torch.include.caffe2.operators
P:torch.include.caffe2.transforms
P:torch.include.caffe2.video
P:torch.include.caffe2.utils
P:torch.include.caffe2.utils.math
P:torch.include.caffe2.utils.threadpool
P:torch.include.caffe2.ideep
P:torch.include.caffe2.onnx
P:torch.include.caffe2.perfkernels
P:torch.include.caffe2.proto
P:torch.include.caffe2.distributed
P:torch.include.c10d
P:torch.include.torch
P:torch.include.torch.csrc
P:torch.include.torch.csrc.api
P:torch.include.torch.csrc.api.include
P:torch.include.torch.csrc.api.include.torch
P:torch.include.torch.csrc.api.include.torch.optim
P:torch.include.torch.csrc.api.include.torch.optim.schedulers
P:torch.include.torch.csrc.api.include.torch.data
P:torch.include.torch.csrc.api.include.torch.data.datasets
P:torch.include.torch.csrc.api.include.torch.data.samplers
P:torch.include.torch.csrc.api.include.torch.data.dataloader
P:torch.include.torch.csrc.api.include.torch.data.detail
P:torch.include.torch.csrc.api.include.torch.data.transforms
P:torch.include.torch.csrc.api.include.torch.serialize
P:torch.include.torch.csrc.api.include.torch.detail
P:torch.include.torch.csrc.api.include.torch.nn
P:torch.include.torch.csrc.api.include.torch.nn.functional
P:torch.include.torch.csrc.api.include.torch.nn.parallel
P:torch.include.torch.csrc.api.include.torch.nn.utils
P:torch.include.torch.csrc.api.include.torch.nn.options
P:torch.include.torch.csrc.api.include.torch.nn.modules
P:torch.include.torch.csrc.api.include.torch.nn.modules.container
P:torch.include.torch.csrc.cuda
P:torch.include.torch.csrc.autograd
P:torch.include.torch.csrc.autograd.generated
P:torch.include.torch.csrc.autograd.utils
P:torch.include.torch.csrc.autograd.functions
P:torch.include.torch.csrc.tensor
P:torch.include.torch.csrc.jit
P:torch.include.torch.csrc.jit.backends
P:torch.include.torch.csrc.jit.ir
P:torch.include.torch.csrc.jit.python
P:torch.include.torch.csrc.jit.passes
P:torch.include.torch.csrc.jit.passes.quantization
P:torch.include.torch.csrc.jit.passes.utils
P:torch.include.torch.csrc.jit.runtime
P:torch.include.torch.csrc.jit.frontend
P:torch.include.torch.csrc.jit.api
P:torch.include.torch.csrc.jit.testing
P:torch.include.torch.csrc.jit.tensorexpr
P:torch.include.torch.csrc.jit.tensorexpr.operators
P:torch.include.torch.csrc.jit.serialization
P:torch.include.torch.csrc.utils
P:torch.include.torch.csrc.onnx
P:torch.include.c10
P:torch.include.c10.core
P:torch.include.c10.core.impl
P:torch.include.c10.cuda
P:torch.include.c10.cuda.impl
P:torch.include.c10.macros
P:torch.include.c10.util
P:torch.include.ATen
P:torch.include.ATen.core
P:torch.include.ATen.core.boxing
P:torch.include.ATen.core.boxing.impl
P:torch.include.ATen.core.dispatch
P:torch.include.ATen.core.op_registration
P:torch.include.ATen.quantized
P:torch.include.ATen.cpu
P:torch.include.ATen.cpu.vec256
P:torch.include.ATen.cuda
P:torch.include.ATen.cuda.detail
P:torch.include.ATen.native
P:torch.include.ATen.native.quantized
P:torch.include.ATen.native.quantized.cpu
P:torch.include.ATen.native.cpu
P:torch.include.ATen.native.cuda
P:torch.include.ATen.hip
P:torch.include.ATen.hip.impl
P:torch.include.ATen.detail
P:torch.include.ATen.cudnn
P:torch.include.THC
P:torch.include.THC.generic
P:torch.include.TH
P:torch.include.TH.generic
P:torch.include.THCUNN
P:torch.include.THCUNN.generic
P:torch.include.pybind11
P:torch.include.pybind11.detail
P:torch.package
P:torch.package.analyze
P:torch.multiprocessing
P:torch.for_onnx
P:torch.utils
P:torch.utils.model_dump
P:torch.utils.hipify
P:torch.utils.ffi
P:torch.utils.backcompat
P:torch.utils.bottleneck
P:torch.utils.data
P:torch.utils.data._utils
P:torch.utils.data.datapipes
P:torch.utils.data.datapipes.iter
P:torch.utils.data.datapipes.utils
P:torch.utils.benchmark
P:torch.utils.benchmark.examples
P:torch.utils.benchmark.op_fuzzers
P:torch.utils.benchmark.utils
P:torch.utils.benchmark.utils.valgrind_wrapper
P:torch.utils.tensorboard
P:torch.contrib
P:torch.onnx
P:torch.profiler
P:torch.distributed
P:torch.distributed.launcher
P:torch.distributed.algorithms
P:torch.distributed.algorithms.ddp_comm_hooks
P:torch.distributed.pipeline
P:torch.distributed.pipeline.sync
P:torch.distributed.pipeline.sync.skip
P:torch.distributed.pipeline.sync._balance
P:torch.distributed.optim
P:torch.distributed.autograd
P:torch.distributed.rpc
P:torch.distributed.rpc._testing
P:torch.distributed.nn
P:torch.distributed.nn.api
P:torch.distributed.nn.jit
P:torch.distributed.nn.jit.templates
P:torch.distributed.elastic
P:torch.distributed.elastic.agent
P:torch.distributed.elastic.agent.server
P:torch.distributed.elastic.metrics
P:torch.distributed.elastic.rendezvous
P:torch.distributed.elastic.timer
P:torch.distributed.elastic.events
P:torch.distributed.elastic.multiprocessing
P:torch.distributed.elastic.multiprocessing.errors
P:torch.distributed.elastic.utils
P:torch.distributed.elastic.utils.data

----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/functional.py----------------------------------------
A:torch.functional.scalar->torch.zeros((), device='cpu')
A:torch.functional.tensors->broadcast_tensors(*tensors)
A:torch.functional.empty_list->torch.jit.annotate(List[int], [])
A:torch.functional.result_temp->torch.jit.annotate(List[List[int]], [])
A:torch.functional.signal_dim->input.view(input.shape[-signal_dim:]).dim()
A:torch.functional.pad->int(n_fft // 2)
A:torch.functional.input->input.view(input.shape[-signal_dim:]).view(input.shape[-signal_dim:])
A:torch.functional.(output, inverse_indices, counts)->torch._VF.unique_consecutive(input, return_inverse=return_inverse, return_counts=return_counts, dim=dim)
A:torch.functional.(output, _, counts)->_unique_consecutive_impl(input, return_inverse, return_counts, dim)
A:torch.functional.(output, _, _)->_unique_consecutive_impl(input, return_inverse, return_counts, dim)
A:torch.functional.(output, inverse_indices, _)->_unique_consecutive_impl(input, return_inverse, return_counts, dim)
A:torch.functional._return_inverse_false->boolean_dispatch(arg_name='return_counts', arg_index=3, default=False, if_true=_return_counts, if_false=_return_output, module_name=__name__, func_name='unique')
A:torch.functional._return_inverse_true->boolean_dispatch(arg_name='return_counts', arg_index=3, default=False, if_true=_unique_impl, if_false=_return_inverse, module_name=__name__, func_name='unique')
A:torch.functional.unique->boolean_dispatch(arg_name='return_inverse', arg_index=2, default=False, if_true=_return_inverse_true, if_false=_return_inverse_false, module_name=__name__, func_name='unique')
A:torch.functional._consecutive_return_inverse_false->boolean_dispatch(arg_name='return_counts', arg_index=1, default=False, if_true=_consecutive_return_counts, if_false=_consecutive_return_output, module_name=__name__, func_name='unique_consecutive')
A:torch.functional._consecutive_return_inverse_true->boolean_dispatch(arg_name='return_counts', arg_index=1, default=False, if_true=_unique_consecutive_impl, if_false=_consecutive_return_inverse, module_name=__name__, func_name='unique_consecutive')
A:torch.functional.unique_consecutive->boolean_dispatch(arg_name='return_inverse', arg_index=2, default=False, if_true=_consecutive_return_inverse_true, if_false=_consecutive_return_inverse_false, module_name=__name__, func_name='unique_consecutive')
A:torch.functional.num_elements->dims.numel()
A:torch.functional.dims_a->list(range(-dims, 0))
A:torch.functional.dims_b->list(range(dims))
A:torch.functional.dims_val->int(dims.item())
A:torch.functional.ndim->input.view(input.shape[-signal_dim:]).view(input.shape[-signal_dim:]).dim()
A:torch.functional._dim->list(range(ndim))
A:torch.functional.result->_lu_impl(A, pivot, get_infos, out)
A:torch.functional.lu->boolean_dispatch(arg_name='get_infos', arg_index=2, default=False, if_true=_lu_with_infos, if_false=_lu_no_infos, module_name=__name__, func_name='lu')
torch.functional._check_list_size(out_len:int,get_infos:bool,out:_ListOrSeq)->None
torch.functional._consecutive_return_counts(input,return_inverse=False,return_counts=False,dim=None)
torch.functional._consecutive_return_inverse(input,return_inverse=False,return_counts=False,dim=None)
torch.functional._consecutive_return_output(input,return_inverse=False,return_counts=False,dim=None)
torch.functional._index_tensor_with_indices_list(tensor,indices)
torch.functional._indices_product(indices:_Indices)->List[List[int]]
torch.functional._lu_impl(A,pivot=True,get_infos=False,out=None)
torch.functional._lu_no_infos(A,pivot=True,get_infos=False,out=None)
torch.functional._lu_with_infos(A,pivot=True,get_infos=False,out=None)
torch.functional._meshgrid(*tensors)
torch.functional._return_counts(input,sorted=True,return_inverse=False,return_counts=False,dim=None)
torch.functional._return_inverse(input,sorted=True,return_inverse=False,return_counts=False,dim=None)
torch.functional._return_output(input,sorted=True,return_inverse=False,return_counts=False,dim=None)
torch.functional._unique_consecutive_impl(input:Tensor,return_inverse:bool=False,return_counts:bool=False,dim:Optional[int]=None)->_unique_impl_out
torch.functional._unique_impl(input:Tensor,sorted:bool=True,return_inverse:bool=False,return_counts:bool=False,dim:Optional[int]=None)->_unique_impl_out
torch.functional.align_tensors(*tensors)
torch.functional.atleast_1d(*tensors)
torch.functional.atleast_2d(*tensors)
torch.functional.atleast_3d(*tensors)
torch.functional.block_diag(*tensors)
torch.functional.broadcast_shapes(*shapes)
torch.functional.broadcast_tensors(*tensors)
torch.functional.cartesian_prod(*tensors)
torch.functional.cdist(x1,x2,p=2.0,compute_mode='use_mm_for_euclid_dist_if_necessary')
torch.functional.chain_matmul(*matrices,out=None)
torch.functional.einsum(equation,*operands)
torch.functional.istft(input:Tensor,n_fft:int,hop_length:Optional[int]=None,win_length:Optional[int]=None,window:Optional[Tensor]=None,center:bool=True,normalized:bool=False,onesided:Optional[bool]=None,length:Optional[int]=None,return_complex:bool=False)->Tensor
torch.functional.norm(input,p='fro',dim=None,keepdim=False,out=None,dtype=None)
torch.functional.split(tensor,split_size_or_sections,dim=0)
torch.functional.stft(input:Tensor,n_fft:int,hop_length:Optional[int]=None,win_length:Optional[int]=None,window:Optional[Tensor]=None,center:bool=True,pad_mode:str='reflect',normalized:bool=False,onesided:Optional[bool]=None,return_complex:Optional[bool]=None)->Tensor
torch.functional.tensordot(a,b,dims=2,out:Optional[torch.Tensor]=None)


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/__init__.py----------------------------------------
A:torch.__init__.pfiles_path->os.getenv('ProgramFiles', 'C:\\Program Files')
A:torch.__init__.py_dll_path->os.path.join(sys.exec_prefix, 'Library', 'bin')
A:torch.__init__.th_dll_path->os.path.join(os.path.dirname(__file__), 'lib')
A:torch.__init__.base_py_dll_path->os.path.join(sys.base_exec_prefix, 'Library', 'bin')
A:torch.__init__.dll_paths->list(filter(os.path.exists, [th_dll_path, py_dll_path, base_py_dll_path]))
A:torch.__init__.nvtoolsext_dll_path->os.path.join(os.getenv('NVTOOLSEXT_PATH', os.path.join(pfiles_path, 'NVIDIA Corporation', 'NvToolsExt')), 'bin', 'x64')
A:torch.__init__.cuda_version_1->version.cuda.replace('.', '_')
A:torch.__init__.default_path->os.path.join(pfiles_path, 'NVIDIA GPU Computing Toolkit', 'CUDA', 'v' + cuda_version)
A:torch.__init__.cuda_path->os.path.join(os.getenv(cuda_path_var, default_path), 'bin')
A:torch.__init__.kernel32->ctypes.WinDLL('kernel32.dll', use_last_error=True)
A:torch.__init__.with_load_library_flags->hasattr(kernel32, 'AddDllDirectory')
A:torch.__init__.prev_error_mode->ctypes.WinDLL('kernel32.dll', use_last_error=True).SetErrorMode(1)
A:torch.__init__.res->ctypes.WinDLL('kernel32.dll', use_last_error=True).LoadLibraryW(dll)
A:torch.__init__.err->ctypes.WinError(ctypes.get_last_error())
A:torch.__init__.dlls->glob.glob(os.path.join(th_dll_path, '*.dll'))
A:torch.__init__.last_error->ctypes.get_last_error()
A:torch.__init__.os.environ['PATH']->';'.join(dll_paths + [os.environ['PATH']])
A:torch.__init__.here->os.path.abspath(__file__)
A:torch.__init__.lib_path->os.path.join(os.path.dirname(here), 'lib', lib_name)
A:torch.__init__.old_flags->sys.getdlopenflags()
A:torch.__init__.candidate->getattr(_C, attr)
A:torch.__init__.t->_import_dotted_name(t)
A:torch.__init__.path->get_file_path('torch', 'bin', 'torch_shm_manager')
A:torch.__init__.globals()[name]->getattr(_C._VariableFunctions, name)
L:torch.__init__.legacy_contiguous_format->contiguous_format
torch.__init__.BFloat16Storage(_C.BFloat16StorageBase,_StorageBase)
torch.__init__.BoolStorage(_C.BoolStorageBase,_StorageBase)
torch.__init__.ByteStorage(_C.ByteStorageBase,_StorageBase)
torch.__init__.CharStorage(_C.CharStorageBase,_StorageBase)
torch.__init__.ComplexDoubleStorage(_C.ComplexDoubleStorageBase,_StorageBase)
torch.__init__.ComplexFloatStorage(_C.ComplexFloatStorageBase,_StorageBase)
torch.__init__.DoubleStorage(_C.DoubleStorageBase,_StorageBase)
torch.__init__.FloatStorage(_C.FloatStorageBase,_StorageBase)
torch.__init__.HalfStorage(_C.HalfStorageBase,_StorageBase)
torch.__init__.IntStorage(_C.IntStorageBase,_StorageBase)
torch.__init__.LongStorage(_C.LongStorageBase,_StorageBase)
torch.__init__.QInt32Storage(_C.QInt32StorageBase,_StorageBase)
torch.__init__.QInt8Storage(_C.QInt8StorageBase,_StorageBase)
torch.__init__.QUInt4x2Storage(_C.QUInt4x2StorageBase,_StorageBase)
torch.__init__.QUInt8Storage(_C.QUInt8StorageBase,_StorageBase)
torch.__init__.ShortStorage(_C.ShortStorageBase,_StorageBase)
torch.__init__._assert(condition,message)
torch.__init__._load_global_deps()
torch.__init__.are_deterministic_algorithms_enabled()
torch.__init__.compiled_with_cxx11_abi()
torch.__init__.is_deterministic()
torch.__init__.is_storage(obj)
torch.__init__.is_tensor(obj)
torch.__init__.is_warn_always_enabled()
torch.__init__.manager_path()
torch.__init__.set_default_dtype(d)
torch.__init__.set_default_tensor_type(t)
torch.__init__.set_deterministic(d)
torch.__init__.set_warn_always(b)
torch.__init__.typename(o)
torch.__init__.use_deterministic_algorithms(mode)


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/__config__.py----------------------------------------
torch.__config__._cxx_flags()
torch.__config__.parallel_info()
torch.__config__.show()


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/_utils_internal.py----------------------------------------
A:torch._utils_internal.torch_parent->os.path.dirname(os.path.dirname(__file__))
A:torch._utils_internal.filename->inspect.getsourcefile(obj)
A:torch._utils_internal.(sourcelines, file_lineno)->inspect.getsourcelines(obj)
torch._utils_internal.get_file_path(*path_components)
torch._utils_internal.get_file_path_2(*path_components)
torch._utils_internal.get_source_lines_and_file(obj,error_msg=None)
torch._utils_internal.get_writable_path(path)
torch._utils_internal.prepare_multiprocessing_environment(path)
torch._utils_internal.resolve_library_path(path)


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/_python_dispatcher.py----------------------------------------
A:torch._python_dispatcher.self.ref->torch._C._dispatch_library('FRAGMENT', self.namespace, '')
A:torch._python_dispatcher.output->self._format_header('Computed Dispatch Table')
A:torch._python_dispatcher.state->self.rawRegistrations()
A:torch._python_dispatcher.state_entries->self.rawRegistrations().split('\n')
A:torch._python_dispatcher.table->self.rawDispatchTable()
A:torch._python_dispatcher.table_entries->self.rawDispatchTable().split('\n')
A:torch._python_dispatcher.regex->re.compile('registered at .*FallbackKernel\\.cpp.*(\\[)')
A:torch._python_dispatcher.entry->re.compile('registered at .*FallbackKernel\\.cpp.*(\\[)').sub('[', line)
torch._python_dispatcher.PythonDispatcher(self)
torch._python_dispatcher.PythonDispatcher._format_header(self,header)
torch._python_dispatcher.PythonDispatcher._format_line(self,key,kernel)
torch._python_dispatcher.PythonDispatcher.dispatchTable(self)
torch._python_dispatcher.PythonDispatcher.keys(self)
torch._python_dispatcher.PythonDispatcher.rawDispatchTable(self)
torch._python_dispatcher.PythonDispatcher.rawRegistrations(self)
torch._python_dispatcher.PythonDispatcher.register(self,dispatchKeys)
torch._python_dispatcher.PythonDispatcher.registrations(self)


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/_VF.py----------------------------------------
A:torch._VF.sys.modules[__name__]->VFModule(__name__)
torch._VF.VFModule(self,name)
torch._VF.VFModule.__getattr__(self,attr)


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/_appdirs.py----------------------------------------
A:torch._appdirs.__version_info__->tuple((int(segment) for segment in __version__.split('.')))
A:torch._appdirs.path->os.path.join(path, version)
A:torch._appdirs.appname->os.path.join(appname, version)
A:torch._appdirs.key->winreg.OpenKey(_winreg.HKEY_CURRENT_USER, 'Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders')
A:torch._appdirs.(dir, type)->winreg.QueryValueEx(key, shell_folder_name)
A:torch._appdirs.dir->com.sun.jna.Native.toString(buf.tostring()).rstrip('\x00')
A:torch._appdirs.buf->array.zeros('c', buf_size)
A:torch._appdirs.buf2->ctypes.create_unicode_buffer(1024)
A:torch._appdirs.dirs->AppDirs(appname, appauthor=False)
L:torch._appdirs.unicode->str
torch._appdirs.AppDirs(self,appname=None,appauthor=None,version=None,roaming=False,multipath=False)
torch._appdirs.AppDirs.site_config_dir(self)
torch._appdirs.AppDirs.site_data_dir(self)
torch._appdirs.AppDirs.user_cache_dir(self)
torch._appdirs.AppDirs.user_config_dir(self)
torch._appdirs.AppDirs.user_data_dir(self)
torch._appdirs.AppDirs.user_log_dir(self)
torch._appdirs.AppDirs.user_state_dir(self)
torch._appdirs._get_win_folder_from_registry(csidl_name)
torch._appdirs._get_win_folder_with_ctypes(csidl_name)
torch._appdirs._get_win_folder_with_jna(csidl_name)
torch._appdirs._get_win_folder_with_pywin32(csidl_name)
torch._appdirs.site_config_dir(appname=None,appauthor=None,version=None,multipath=False)
torch._appdirs.site_data_dir(appname=None,appauthor=None,version=None,multipath=False)
torch._appdirs.user_cache_dir(appname=None,appauthor=None,version=None,opinion=True)
torch._appdirs.user_config_dir(appname=None,appauthor=None,version=None,roaming=False)
torch._appdirs.user_data_dir(appname=None,appauthor=None,version=None,roaming=False)
torch._appdirs.user_log_dir(appname=None,appauthor=None,version=None,opinion=True)
torch._appdirs.user_state_dir(appname=None,appauthor=None,version=None,roaming=False)


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/_utils.py----------------------------------------
A:torch._utils.non_blocking->_get_async_or_non_blocking('cuda', non_blocking, kwargs)
A:torch._utils.dtype->_import_dotted_name(dtype)
A:torch._utils.new_module_name->_import_dotted_name(dtype).__module__.replace('.sparse', '')
A:torch._utils.new_values->torch.Tensor._values(self).type(new_values_type_name, non_blocking)
A:torch._utils.new_indices->torch.Tensor._indices(self).type(new_indices_type_name, non_blocking)
A:torch._utils.device->torch.device(device)
A:torch._utils.new_type->getattr(torch.cuda, self.__class__.__name__)
A:torch._utils.indices->torch.Tensor._indices(tensor)
A:torch._utils.values->torch.Tensor._values(tensor)
A:torch._utils.argument->list(kwargs.keys()).pop()
A:torch._utils.t->torch._empty_per_channel_affine_quantized(size, scales=scales, zero_points=zero_points, axis=axis, dtype=storage.dtype).type()
A:torch._utils.tensor->torch._empty_per_channel_affine_quantized(size, scales=scales, zero_points=zero_points, axis=axis, dtype=storage.dtype)
A:torch._utils.result->torch._sparse_coo_tensor_unsafe(indices, values, size)
A:torch._utils.scales->torch.tensor(scales, dtype=torch.float)
A:torch._utils.zero_points->torch.tensor(zero_points, dtype=torch.float)
A:torch._utils.param->torch.nn.Parameter(data, requires_grad)
A:torch._utils.components->name.split('.')
A:torch._utils.obj->getattr(obj, component)
A:torch._utils.it->iter(iterable)
A:torch._utils.total->fn(total, element)
A:torch._utils.flat_indices->torch._C._nn.flatten_dense_tensors([torch.Tensor._indices(t) for t in tensors])
A:torch._utils.flat_values->torch._C._nn.flatten_dense_tensors([torch.Tensor._values(t) for t in tensors])
A:torch._utils.type_dict->defaultdict(list)
A:torch._utils.fun.__annotations__->dict(kwargs)
A:torch._utils.exc_info->sys.exc_info()
A:torch._utils.self.exc_msg->''.join(traceback.format_exception(*exc_info))
A:torch._utils.msg->KeyErrorMessage(msg)
A:torch._utils.device_type->_get_available_device_type()
A:torch._utils.device_idx->_get_current_device_index()
torch._utils.ExceptionWrapper(self,exc_info=None,where='inbackground')
torch._utils.ExceptionWrapper.reraise(self)
torch._utils.KeyErrorMessage(str)
torch._utils.KeyErrorMessage.__repr__(self)
torch._utils._accumulate(iterable,fn=lambdax,y:x+y)
torch._utils._cuda(self,device=None,non_blocking=False,**kwargs)
torch._utils._flatten_dense_tensors(tensors)
torch._utils._flatten_sparse_tensors(tensors)
torch._utils._get_all_device_indices()
torch._utils._get_async_or_non_blocking(function_name,non_blocking,kwargs)
torch._utils._get_available_device_type()
torch._utils._get_current_device_index()
torch._utils._get_device_attr(get_member)
torch._utils._get_device_index(device:Any,optional:bool=False,allow_cpu:bool=False)->int
torch._utils._get_devices_properties(device_ids)
torch._utils._handle_complex(tensor)
torch._utils._import_dotted_name(name)
torch._utils._rebuild_mlc_tensor(data,dtype,device,requires_grad)
torch._utils._rebuild_parameter(data,requires_grad,backward_hooks)
torch._utils._rebuild_qtensor(storage,storage_offset,size,stride,quantizer_params,requires_grad,backward_hooks)
torch._utils._rebuild_sparse_tensor(layout,data)
torch._utils._rebuild_tensor(storage,storage_offset,size,stride)
torch._utils._rebuild_tensor_v2(storage,storage_offset,size,stride,requires_grad,backward_hooks)
torch._utils._rebuild_xla_tensor(data,dtype,device,requires_grad)
torch._utils._reorder_tensors_as(tensors,ordered_tensors)
torch._utils._take_tensors(tensors,size_limit)
torch._utils._type(self,dtype=None,non_blocking=False,**kwargs)
torch._utils._unflatten_dense_tensors(flat,tensors)
torch._utils._unflatten_sparse_tensors(flat,tensors)
torch._utils._validate_loaded_sparse_tensors()
torch._utils.annotate(ret,**kwargs)
torch._utils.get_current_device_index()->int


----------------------------------------/dataset/zhang/anaconda3/envs/3d_u/lib/python3.7/site-packages/torch/quasirandom.py----------------------------------------
A:torch.quasirandom.cpu->torch.device('cpu')
A:torch.quasirandom.self.sobolstate->torch.zeros(dimension, self.MAXBIT, device=cpu, dtype=torch.long)
A:torch.quasirandom.self.shift->torch.mv(shift_ints, torch.pow(2, torch.arange(0, self.MAXBIT, device=cpu)))
